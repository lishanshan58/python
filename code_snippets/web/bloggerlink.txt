import os, sys
import cgi
import cgitb
import sqlite3
from datetime import datetime
from urlparse import urlparse
cgitb.enable()

def hyperlinker (full_text, target, hyperlink):
    if target == None or hyperlink == None:
        return full_text
    else:
        if full_text.find(target) == -1:
            print 'Content-type: text/html\n\n' + '<h2>Your target word was not found.  Hit the back button.</h2>'
            sys.exit()
        else:
            anchor = '<a href="' + hyperlink + '">' + target + "</a>"
            return full_text.replace(target, anchor)

def insertFeed(txt, datetime_stamp):
   for values in [(txt, datetime_stamp),]:
       c.execute("insert into feed (txtfeed, datetime_stamp) values(?,?)", values)
   conn.commit()

def getProfileImg(userid):
   value = (userid,)
   c.execute("select img_url from users where userid = ?", value)
   conn.commit()

   for row in c:
      img_url = row[0]
   
   return img_url

def generateFeed(userid, comment):
   myImg = getProfileImg(userid)
   comment_txt = r'<TR>   \
	<TD rowspan="2"><img src="' + myImg + r'">  \
      </TD>  \
	<TD><FONT face="Verdana,Helvetica" COLOR="#00008B" SIZE="2"><b>D Kim 17151:<b>&nbsp;</FONT><FONT face="Verdana,Helvetica" SIZE="3">' + comment + r'</FONT>  \
      </TD>  \
</TR>  \
<TR>  \
	<TD><FONT face="Verdana,Helvetica" SIZE="1">'+ mydate.strftime("%m/%d/%Y - %I:%M%p") + r'</FONT>  \
      </TD>  \
</TR>  \
<TR>  \
      <TD>&nbsp;  \
      </TD>  \
</TR>' + "\n"


   comment_txt = comment_txt.replace(' \\','')
   return comment_txt
    

form = cgi.FieldStorage()
comment = form["comment"].value
pw = form["password"].value
userid = 'ma17151'
try:
    target = form["target"].value
    hlink  = form["hlink"].value
except:
    target = None
    hlink  = None

if pw == 'secret':
   # Make connection to sqlite DB
   conn = sqlite3.connect(r"D:\tomcat\webapps\DensoOBD\WEB-INF\db\dobd_dev")
   c = conn.cursor()

   # Get the date/time the user added blog and then format it as 'mm/dd/YYYY - hh:mmAM/PM'
   mydate = datetime_stamp = datetime.now()

   insertFeed(comment, datetime_stamp)

   c.close()

   # Go get the URL/html page that the user requested
   http_referer = os.environ['HTTP_REFERER']  # For example:  http://10.60.10.102/python/www/AddComments2Image.html

   # Now just get the URL suffix, we don't care about the full URL
   url_parser = urlparse(http_referer)
   url_suffix = url_parser.path   # url_suffix = "/python/www/AddComments2Image.html"

   # Now concatenate the URL suffix with physical drive location of the webapp directory
   orig_file = "d:\\tomcat\\webapps"+url_suffix.replace("/","\\")   # Replace forward slash with backslash since we're on Windoze, not Linux
   # original file = "d:\tomcat\webapps\python\www\AddComments2Image.html"

   # Now prepare temporary file which we will later replace the original file with, we are going to keep the same name, but add _bak at the end
   temp_file = orig_file.replace(".html","_bak.html")
   # temporary file = "d:\tomcat\webapps\python\www\AddComments2Image_bak.html"

   # Now create input file for read-only access and output file for write access
   input_file = open(orig_file,'r')
   output_file = open(temp_file,'w')

   # Get the comment that the user entered in the HTML text box, then format it for HTML
   comment = comment.replace('<','&#60;').replace('>','&#62;')

   hypcomment = hyperlinker(comment, target, hlink)

   comment_formatted = generateFeed(userid, hypcomment)

   # Read the entire contents of the orginal file as lines stored in a list (a list of lines)
   lines_list = input_file.readlines()  #  FYI, this is very inefficient. Do not use readlines() if there are several thousands of comments...

   input_file.close()

   # Find where the first comment is in the HTML page
   index = lines_list.index("<!-- START BLOG -->\n")

   # Now insert the new comment at the top of the comments
   lines_list.insert(index+1,comment_formatted)

   # Now write the contents of the new HTML file to the temporary output file
   for line in lines_list:
      output_file.write(line)

   output_file.close()

   # Now swap the original file with the temporary file with updated user comments
   in_file = open(temp_file,'r')
   out_file = open(orig_file,'w')

   in_file_contents = in_file.read()
   out_file.write(in_file_contents)

   in_file.close()
   out_file.close()

   # Now, refresh the page with newly added comment-we're done!
   print 'Content-type: text/html\n\n' + '<meta http-equiv="REFRESH" content="0;url=' + http_referer + '">'
else:
   print 'Content-type: text/html\n\n' + '<h2>You do not have permission to add to this feed</h2>'
