#### Creating python dict ####

INSTEAD OF:
d = {}
for key, value in pairs:
    if key not in d:
        d[key] = []
    d[key].append(value)

DO THIS:
from collections import defaultdic

d = defaultdic(list)
for key, value in pairs:
    d[key].append(value)

#### To preserve original insertion order of dict ####
# NOTE: this is a memory hog for large dicts
from collections import OrderedDict

d = OrderedDict()
d['foo'] = 1
d['bar'] = 2
d['spam'] = 3
d['grok'] = 4

for key in d:
    print(key, d[key])

#### Calculating min, max, and sort on dictionary of data ####
prices = {
    'ACME': 45.23,
    'APPL': 612.78,
    'IBM': 205.55,
    'HPQ': 37.20,
    'FB': 10.75
}

min_price = min(zip(prices.values(), prices.keys()))
# min_price is (10.75, 'FB')

max_price = max(zip(prices.values(), prices.keys()))
# max_price is (612.78, 'AAPL')

prices_sorted = sorted(zip(prices.values(),prices.keys()))
# prices_sorted is [(10.75, 'FB'),(37.2, 'HPQ'),(45.23, 'ACME'),(205.55, 'IBM'),(612.78, 'AAPL')]

# To get corresponding key based on minimum or maximum value:
min(prices, key=lambda k: prices[k])
max(prices, key=lambda k: prices[k])

# To get minimum or maximum value:
min_value = prices[min(prices, key=lambda k: prices[k])]
max_value = prices[max(prices, key=lambda k: prices[k])]
